/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DutchAuction, DutchAuctionInterface } from "../DutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_judgeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "succeed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "BidEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "succeed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "BidFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "succeed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winnerOrJudge",
        type: "address",
      },
    ],
    name: "FinalizeEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "hasJudge",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isReceivingBid",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isFinalized",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Info",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToAmountBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bidders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "judge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nop",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c3038038062001c308339818101604052810190620000379190620001fe565b600081116200007d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000749062000291565b60405180910390fd5b60008211620000c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ba9062000291565b60405180910390fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360068190555081600781905550806008819055506008546007546200012b919062000321565b6006546200013a9190620002c4565b600581905550436009819055506000600a8190555082600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b60006101000a81548160ff0219169083151502179055506001600b60016101000a81548160ff021916908315150217905550505050506200044c565b600081519050620001e18162000418565b92915050565b600081519050620001f88162000432565b92915050565b600080600080608085870312156200021557600080fd5b60006200022587828801620001e7565b94505060206200023887828801620001d0565b93505060406200024b87828801620001e7565b92505060606200025e87828801620001e7565b91505092959194509250565b600062000279600783620002b3565b91506200028682620003ef565b602082019050919050565b60006020820190508181036000830152620002ac816200026a565b9050919050565b600082825260208201905092915050565b6000620002d182620003b6565b9150620002de83620003b6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003165762000315620003c0565b5b828201905092915050565b60006200032e82620003b6565b91506200033b83620003b6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620003775762000376620003c0565b5b828202905092915050565b60006200038f8262000396565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f696e76616c696400000000000000000000000000000000000000000000000000600082015250565b620004238162000382565b81146200042f57600080fd5b50565b6200043d81620003b6565b81146200044957600080fd5b50565b6117d4806200045c6000396000f3fe60806040526004361061009c5760003560e01c8063590e1ae311610064578063590e1ae3146101695780638da5cb5b1461018057806398d5fdca146101ab578063cff29dfd146101d6578063dfbf53ae14610213578063f0035fb51461023e5761009c565b80631998aeef146100a15780632e9c58bb146100bf578063390bf9e2146100ea5780634bb278f314610127578063573255f41461013e575b600080fd5b6100a9610255565b6040516100b6919061127c565b60405180910390f35b3480156100cb57600080fd5b506100d4610752565b6040516100e19190611297565b60405180910390f35b3480156100f657600080fd5b50610111600480360381019061010c9190611067565b6107b0565b60405161011e9190611497565b60405180910390f35b34801561013357600080fd5b5061013c6107c8565b005b34801561014a57600080fd5b50610153610be3565b604051610160919061127c565b60405180910390f35b34801561017557600080fd5b5061017e610c09565b005b34801561018c57600080fd5b50610195610e65565b6040516101a2919061127c565b60405180910390f35b3480156101b757600080fd5b506101c0610e8b565b6040516101cd9190611497565b60405180910390f35b3480156101e257600080fd5b506101fd60048036038101906101f89190611090565b610f0f565b60405161020a919061127c565b60405180910390f35b34801561021f57600080fd5b50610228610f4e565b604051610235919061127c565b60405180910390f35b34801561024a57600080fd5b50610253610f74565b005b6000801515600b60009054906101000a900460ff161515146102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a3906113f7565b60405180910390fd5b600754600a54106102f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e990611357565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037a90611457565b60405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890611417565b60405180910390fd5b60006103fb610e8b565b905080341015610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790611377565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105eb576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516104df90611267565b60006040518083038185875af1925050503d806000811461051c576040519150601f19603f3d011682016040523d82523d6000602084013e610521565b606091505b5050905080610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90611397565b60405180910390fd5b600082346105739190611528565b905060008111156105e8573373ffffffffffffffffffffffffffffffffffffffff16816040516105a290611267565b60006040518083038185875af1925050503d80600081146105df576040519150601f19603f3d011682016040523d82523d6000602084013e6105e4565b606091505b5050505b50505b600081346105f99190611528565b9050600081111561066e573373ffffffffffffffffffffffffffffffffffffffff168160405161062890611267565b60006040518083038185875af1925050503d8060008114610665576040519150601f19603f3d011682016040523d82523d6000602084013e61066a565b606091505b5050505b81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b60016101000a81548160ff0219169083151502179055507f8b937f353c9984a9a5567857164e1ef36e2d6bc3fc41dbf76f6d07c6426d62e360013384604051610742939291906112db565b60405180910390a1339250505090565b6000801515600b60009054906101000a900460ff161515146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a0906113f7565b60405180910390fd5b6001905090565b60016020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108715750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a790611477565b60405180910390fd5b60001515600b60009054906101000a900460ff16151514610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd906113f7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f906113d7565b60405180910390fd5b6001600b60006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ba7576000600c6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610b1e90611267565b60006040518083038185875af1925050503d8060008114610b5b576040519150601f19603f3d011682016040523d82523d6000602084013e610b60565b606091505b5050905080610ba4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9b90611397565b60405180910390fd5b50505b7f9d6d3f6c271e430471936e6e7695c6586abe0d1b9c50b2474cdfa0df7da86861600133604051610bd99291906112b2565b60405180910390a1565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c90906113b7565b60405180910390fd5b60001515600b60009054906101000a900460ff16151514610cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce6906113f7565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610dc090611267565b60006040518083038185875af1925050503d8060008114610dfd576040519150601f19603f3d011682016040523d82523d6000602084013e610e02565b606091505b5050905080610e46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3d90611437565b60405180910390fd5b6001600b60006101000a81548160ff0219169083151502179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000801515600b60009054906101000a900460ff16151514610ee2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed9906113f7565b60405180910390fd5b60085460095443610ef39190611528565b610efd91906114ce565b600554610f0a9190611528565b905090565b60008181548110610f1f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f7e610e8b565b90507fc4bcfd1209098d3fa200964f4747495cb3d953b4cc67f177556523813eeeb4e3600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415600b60019054906101000a900460ff16600b60009054906101000a900460ff16600854856110229190611528565b6040516110329493929190611312565b60405180910390a150565b60008135905061104c81611770565b92915050565b60008135905061106181611787565b92915050565b60006020828403121561107957600080fd5b60006110878482850161103d565b91505092915050565b6000602082840312156110a257600080fd5b60006110b084828501611052565b91505092915050565b6110c28161155c565b82525050565b6110d18161156e565b82525050565b60006110e4601b836114bd565b91506110ef826115d3565b602082019050919050565b6000611107601e836114bd565b9150611112826115fc565b602082019050919050565b600061112a6014836114bd565b915061113582611625565b602082019050919050565b600061114d6013836114bd565b91506111588261164e565b602082019050919050565b60006111706018836114bd565b915061117b82611677565b602082019050919050565b60006111936016836114bd565b915061119e826116a0565b602082019050919050565b60006111b6600c836114bd565b91506111c1826116c9565b602082019050919050565b60006111d96010836114bd565b91506111e4826116f2565b602082019050919050565b60006111fc6000836114b2565b91506112078261171b565b600082019050919050565b600061121f6014836114bd565b915061122a8261171e565b602082019050919050565b6000611242601a836114bd565b915061124d82611747565b602082019050919050565b6112618161159a565b82525050565b6000611272826111ef565b9150819050919050565b600060208201905061129160008301846110b9565b92915050565b60006020820190506112ac60008301846110c8565b92915050565b60006040820190506112c760008301856110c8565b6112d460208301846110b9565b9392505050565b60006060820190506112f060008301866110c8565b6112fd60208301856110b9565b61130a6040830184611258565b949350505050565b600060808201905061132760008301876110c8565b61133460208301866110c8565b61134160408301856110c8565b61134e6060830184611258565b95945050505050565b60006020820190508181036000830152611370816110d7565b9050919050565b60006020820190508181036000830152611390816110fa565b9050919050565b600060208201905081810360008301526113b08161111d565b9050919050565b600060208201905081810360008301526113d081611140565b9050919050565b600060208201905081810360008301526113f081611163565b9050919050565b6000602082019050818103600083015261141081611186565b9050919050565b60006020820190508181036000830152611430816111a9565b9050919050565b60006020820190508181036000830152611450816111cc565b9050919050565b6000602082019050818103600083015261147081611212565b9050919050565b6000602082019050818103600083015261149081611235565b9050919050565b60006020820190506114ac6000830184611258565b92915050565b600081905092915050565b600082825260208201905092915050565b60006114d98261159a565b91506114e48361159a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561151d5761151c6115a4565b5b828202905092915050565b60006115338261159a565b915061153e8361159a565b925082821015611551576115506115a4565b5b828203905092915050565b60006115678261157a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f457863656564204d6178696d756d20626c6f636b206e756d6265720000000000600082015250565b7f4574686572206c657373207468616e2063757272656e74207072696365200000600082015250565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f796f752063616e27742063616c6c207468697300000000000000000000000000600082015250565b7f7374696c6c2068617665206e6f2077696e6e6572207965740000000000000000600082015250565b7f497427732066696e616c697a656420616c726561647900000000000000000000600082015250565b7f4d7573742075736520454f410000000000000000000000000000000000000000600082015250565b7f4661696c656420746f20726566756e6400000000000000000000000000000000600082015250565b50565b7f616c72656164792068617320612077696e6e6572000000000000000000000000600082015250565b7f796f75206172656e27742077696e6e6572206f72206a75646765000000000000600082015250565b6117798161155c565b811461178457600080fd5b50565b6117908161159a565b811461179b57600080fd5b5056fea2646970667358221220ae3e856deeee3183a4baae1beedbb45d9a7e1da264d0e0de82b68787c5563ebc64736f6c63430008040033";

export class DutchAuction__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _reservePrice: BigNumberish,
    _judgeAddress: string,
    _numBlocksAuctionOpen: BigNumberish,
    _offerPriceDecrement: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DutchAuction> {
    return super.deploy(
      _reservePrice,
      _judgeAddress,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<DutchAuction>;
  }
  getDeployTransaction(
    _reservePrice: BigNumberish,
    _judgeAddress: string,
    _numBlocksAuctionOpen: BigNumberish,
    _offerPriceDecrement: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _reservePrice,
      _judgeAddress,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  attach(address: string): DutchAuction {
    return super.attach(address) as DutchAuction;
  }
  connect(signer: Signer): DutchAuction__factory {
    return super.connect(signer) as DutchAuction__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DutchAuctionInterface {
    return new utils.Interface(_abi) as DutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DutchAuction {
    return new Contract(address, _abi, signerOrProvider) as DutchAuction;
  }
}
